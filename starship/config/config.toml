# Copyright (C) 2021. All rights reserved.
# File name   : config.toml
# Version     : v1.0
# Author      : codeMonkey
# Date        : 2021-12-25
# Description : starship configure file


# https://starship.rs/config

# Warning: This config does not include keys that have an unset value

# $all is shorthand for $username$hostname$shlvl$singularity$kubernetes$directory$vcsh$git_branch$git_commit$git_state$git_metrics$git_status$hg_branch$docker_context$package$cmake$cobol$dart$deno$dotnet$elixir$elm$erlang$golang$helm$java$julia$kotlin$lua$nim$nodejs$ocaml$perl$php$pulumi$purescript$python$rlang$red$ruby$rust$scala$swift$terraform$vlang$vagrant$zig$nix_shell$conda$memory_usage$aws$gcloud$openstack$azure$env_var$crystal$custom$sudo$cmd_duration$line_break$jobs$battery$time$status$shell$character
# format = '$all'
# right_format = ''
# scan_timeout = 30
command_timeout = 1000
add_newline = false

[aws]
format = '[on](bold white) [$symbol($profile )(\($region\) )(\[$duration\])]($style)'
# symbol = '☁️  '
# style = 'bold yellow'
# disabled = false
# expiration_symbol = 'X'

# [aws.region_aliases]

[azure]
format = '[on](bold white) [$symbol($subscription)]($style) '
# symbol = 'ﴃ '
# style = 'blue bold'
# disabled = true

# [battery]
# full_symbol = ' '
# charging_symbol = ' '
# discharging_symbol = ' '
# unknown_symbol = ' '
# empty_symbol = ' '
# disabled = false
# format = '[$symbol$percentage]($style) '

# [[battery.display]]
# threshold = 10
# style = 'red bold'

[character]
success_symbol = '👉'
error_symbol = '💨'
vicmd_symbol = '👉'
# format = '$symbol '
# disabled = false

[cmake]
format = '[via](bold white) [$symbol($version )]($style)'
symbol = '🛠️  '
# version_format = 'v${raw}'
# style = 'bold blue'
# disabled = false
# detect_extensions = []
# detect_files = [
#     'CMakeLists.txt',
#     'CMakeCache.txt',
# ]
# detect_folders = []

[cmd_duration]
format = '[took](bold white) [$duration]($style) '
# show_milliseconds = false
# min_time = 2000
# style = 'yellow bold'
# disabled = false
# show_notifications = false
# min_time_to_notify = 45000

[cobol]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '⚙️ '
# style = 'bold blue'
# disabled = false
# detect_extensions = [
#     'cbl',
#     'cob',
#     'CBL',
#     'COB',
# ]
# detect_files = []
# detect_folders = []

[conda]
format = '[via](bold white) [$symbol$environment]($style) '
# truncation_length = 1
# symbol = '🅒 '
# style = 'green bold'
# ignore_base = true
# disabled = false

[crystal]
format = '[via](bold white) [$symbol($version )]($style)'
style = 'bold blue'
# version_format = 'v${raw}'
# symbol = '🔮 '
# disabled = false
# detect_extensions = ['cr']
# detect_files = ['shard.yml']
# detect_folders = []

[dart]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '🎯 '
# style = 'bold blue'
# disabled = false
# detect_extensions = ['dart']
# detect_files = [
#     'pubspec.yaml',
#     'pubspec.yml',
#     'pubspec.lock',
# ]
# detect_folders = ['.dart_tool']

[deno]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '🦕 '
# style = 'green bold'
# disabled = false
# detect_extensions = []
# detect_files = [
#     'mod.ts',
#     'deps.ts',
#     'mod.js',
#     'deps.js',
# ]
# detect_folders = []

[directory]
style = 'blue bold'
# truncation_length = 3
# truncate_to_repo = true
# fish_style_pwd_dir_length = 0
# use_logical_path = true
# format = '[$path]($style)[$read_only]($read_only_style) '
# repo_root_format = '[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) '
# disabled = false
# read_only = '🔒'
# read_only_style = 'red'
# truncation_symbol = ''
# home_symbol = '~'

[directory.substitutions]

[docker_context]
format = '[via](bold white) [$symbol$context]($style) '
# symbol = '🐳 '
# style = 'blue bold'
# only_with_files = true
# disabled = false
# detect_extensions = []
# detect_files = [
#     'docker-compose.yml',
#     'docker-compose.yaml',
#     'Dockerfile',
# ]
# detect_folders = []

[dotnet]
format = '[via](bold white) [$symbol($version )(🎯 $tfm )]($style)'
# version_format = 'v${raw}'
# symbol = '.NET '
# style = 'blue bold'
# heuristic = true
# disabled = false
# detect_extensions = [
#     'csproj',
#     'fsproj',
#     'xproj',
# ]
# detect_files = [
#     'global.json',
#     'project.json',
#     'Directory.Build.props',
#     'Directory.Build.targets',
#     'Packages.props',
# ]
# detect_folders = []

[elixir]
format = '[via](bold white) [$symbol($version \(OTP $otp_version\) )]($style)'
# version_format = 'v${raw}'
# symbol = '💧 '
# style = 'bold purple'
# disabled = false
# detect_extensions = []
# detect_files = ['mix.exs']
# detect_folders = []

[elm]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '🌳 '
# style = 'cyan bold'
# disabled = false
# detect_extensions = ['elm']
# detect_files = [
#     'elm.json',
#     'elm-package.json',
#     '.elm-version',
# ]
# detect_folders = ['elm-stuff']

# [env_var]

[erlang]
format = '[via](bold white) [$symbol($version )]($style)'
style = 'bold blue'
# version_format = 'v${raw}'
# symbol = ' '
# disabled = false
# detect_extensions = []
# detect_files = [
#     'rebar.config',
#     'erlang.mk',
# ]
# detect_folders = []

# [fill]
# style = 'bold black'
# symbol = '.'
# disabled = false

[gcloud]
format = '[on](bold white) [$symbol$account(@$domain)(\($region\))]($style) '
# symbol = '☁️  '
# style = 'bold blue'
# disabled = false

# [gcloud.region_aliases]

[git_branch]
format = '[on](bold white) [$symbol$branch]($style)(:[$remote]($style)) '
# symbol = ' '
# style = 'bold purple'
# truncation_length = 9223372036854775807
# truncation_symbol = '…'
# only_attached = false
# always_show_remote = false
# disabled = false

# [git_commit]
# commit_hash_length = 7
# format = '[\($hash$tag\)]($style) '
# style = 'green bold'
# only_detached = true
# disabled = false
# tag_symbol = ' 🏷  '
# tag_disabled = true

# [git_metrics]
# added_style = 'bold green'
# deleted_style = 'bold red'
# only_nonzero_diffs = true
# format = '([+$added]($added_style) )([-$deleted]($deleted_style) )'
# disabled = true

# [git_state]
# rebase = 'REBASING'
# merge = 'MERGING'
# revert = 'REVERTING'
# cherry_pick = 'CHERRY-PICKING'
# bisect = 'BISECTING'
# am = 'AM'
# am_or_rebase = 'AM/REBASE'
# style = 'bold yellow'
# format = '\([$state( $progress_current/$progress_total)]($style)\) '
# disabled = false

[git_status]
style = 'blue bold'
# format = '([\[$all_status$ahead_behind\]]($style) )'
# stashed = '\$'
# ahead = '⇡'
# behind = '⇣'
# up_to_date = ''
# diverged = '⇕'
# conflicted = '='
# deleted = '✘'
# renamed = '»'
# modified = '!'
# staged = '+'
# untracked = '?'
# disabled = false

[golang]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '🐹 '
# style = 'bold cyan'
# disabled = false
# detect_extensions = ['go']
# detect_files = [
#     'go.mod',
#     'go.sum',
#     'glide.yaml',
#     'Gopkg.yml',
#     'Gopkg.lock',
#     '.go-version',
# ]
# detect_folders = ['Godeps']

[helm]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '⎈ '
# style = 'bold white'
# disabled = false
# detect_extensions = []
# detect_files = [
#     'helmfile.yaml',
#     'Chart.yaml',
# ]
# detect_folders = []

[hg_branch]
format = '[on](bold white) [$symbol$branch]($style) '
# symbol = ' '
# style = 'bold purple'
# truncation_length = 9223372036854775807
# truncation_symbol = '…'
# disabled = true

# [hostname]
# ssh_only = true
# trim_at = '.'
# format = '[$hostname]($style) in '
# style = 'green dimmed bold'
# disabled = false

[java]
format = '[via](bold white) [$symbol($version )]($style)'
style = 'bold blue'
# disabled = false
# version_format = 'v${raw}'
# symbol = '☕ '
# detect_extensions = [
#     'java',
#     'class',
#     'jar',
#     'gradle',
#     'clj',
#     'cljc',
# ]
# detect_files = [
#     'pom.xml',
#     'build.gradle.kts',
#     'build.sbt',
#     '.java-version',
#     'deps.edn',
#     'project.clj',
#     'build.boot',
# ]
# detect_folders = []

# [jobs]
# threshold = 1
# symbol_threshold = 1
# number_threshold = 2
# format = '[$symbol$number]($style) '
# symbol = '✦'
# style = 'bold blue'
# disabled = false

[julia]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = 'ஃ '
# style = 'bold purple'
# disabled = false
# detect_extensions = ['jl']
# detect_files = [
#     'Project.toml',
#     'Manifest.toml',
# ]
# detect_folders = []

[kotlin]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '🅺 '
# style = 'bold blue'
# kotlin_binary = 'kotlin'
# disabled = false
# detect_extensions = [
#     'kt',
#     'kts',
# ]
# detect_files = []
# detect_folders = []

# [kubernetes]
# symbol = '☸ '
# format = '[$symbol$context( \($namespace\))]($style) in '
# style = 'cyan bold'
# disabled = true

# [kubernetes.context_aliases]

# [line_break]
# disabled = false

[lua]
format = '[via](bold white) [$symbol($version )]($style)'
symbol = '💀 '
# version_format = 'v${raw}'
# style = 'bold blue'
# lua_binary = 'lua'
# disabled = false
# detect_extensions = ['lua']
# detect_files = ['.lua-version']
# detect_folders = ['lua']

[memory_usage]
format = '[via](bold white) $symbol[$ram( | $swap)]($style) '
# threshold = 75
# style = 'white bold dimmed'
# symbol = '🐏 '
# disabled = true

[nim]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '👑 '
# style = 'yellow bold'
# disabled = false
# detect_extensions = [
#     'nim',
#     'nims',
#     'nimble',
# ]
# detect_files = ['nim.cfg']
# detect_folders = []

[nix_shell]
format = '[via](bold white) [$symbol$state( \($name\))]($style) '
# symbol = '❄️  '
# style = 'bold blue'
# impure_msg = 'impure'
# pure_msg = 'pure'
# disabled = false

[nodejs]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = ' '
# style = 'bold green'
# disabled = false
# not_capable_style = 'bold red'
# detect_extensions = [
#     'js',
#     'mjs',
#     'cjs',
#     'ts',
# ]
# detect_files = [
#     'package.json',
#     '.node-version',
#     '.nvmrc',
# ]
# detect_folders = ['node_modules']

[ocaml]
format = '[via](bold white) [$symbol($version )(\($switch_indicator$switch_name\) )]($style)'
# version_format = 'v${raw}'
# global_switch_indicator = ''
# local_switch_indicator = '*'
# symbol = '🐫 '
# style = 'bold yellow'
# disabled = false
# detect_extensions = [
#     'opam',
#     'ml',
#     'mli',
#     're',
#     'rei',
# ]
# detect_files = [
#     'dune',
#     'dune-project',
#     'jbuild',
#     'jbuild-ignore',
#     '.merlin',
# ]
# detect_folders = [
#     '_opam',
#     'esy.lock',
# ]

[openstack]
format = '[on](bold white) [$symbol$cloud(\($project\))]($style) '
# symbol = '☁️  '
# style = 'bold yellow'
# disabled = false

[package]
format = '[is](bold white) [$symbol$version]($style) '
# symbol = '📦 '
# style = '208 bold'
# display_private = false
# disabled = false
# version_format = 'v${raw}'

[perl]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '🐪 '
# style = '149 bold'
# disabled = false
# detect_extensions = [
#     'pl',
#     'pm',
#     'pod',
# ]
# detect_files = [
#     'Makefile.PL',
#     'Build.PL',
#     'cpanfile',
#     'cpanfile.snapshot',
#     'META.json',
#     'META.yml',
#     '.perl-version',
# ]
# detect_folders = []

[php]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '🐘 '
# style = '147 bold'
# disabled = false
# detect_extensions = ['php']
# detect_files = [
#     'composer.json',
#     '.php-version',
# ]
# detect_folders = []

[pulumi]
format = '[via](bold white) [$symbol$stack]($style) '
# version_format = 'v${raw}'
# symbol = ' '
# style = 'bold 5'
# disabled = false

[purescript]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '<=> '
# style = 'bold white'
# disabled = false
# detect_extensions = ['purs']
# detect_files = ['spago.dhall']
# detect_folders = []

[python]
format = '[via](bold white) [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
# pyenv_version_name = false
# pyenv_prefix = 'pyenv '
# python_binary = [
#     'python',
#     'python3',
#     'python2',
# ]
# version_format = 'v${raw}'
# style = 'yellow bold'
# symbol = '🐍 '
# disabled = false
# detect_extensions = ['py']
# detect_files = [
#     'requirements.txt',
#     '.python-version',
#     'pyproject.toml',
#     'Pipfile',
#     'tox.ini',
#     'setup.py',
#     '__init__.py',
# ]
# detect_folders = []

[red]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '🔺 '
# style = 'red bold'
# disabled = false
# detect_extensions = [
#     'red',
#     'reds',
# ]
# detect_files = []
# detect_folders = []

[rlang]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# style = 'blue bold'
# symbol = '📐 '
# disabled = false
# detect_extensions = [
#     'R',
#     'Rd',
#     'Rmd',
#     'Rproj',
#     'Rsx',
# ]
# detect_files = ['.Rprofile']
# detect_folders = ['.Rproj.user']

[ruby]
format = '[via](bold white) [$symbol($version )]($style)'
style = 'bold blue'
# version_format = 'v${raw}'
# symbol = '💎 '
# disabled = false
# detect_extensions = ['rb']
# detect_files = [
#     'Gemfile',
#     '.ruby-version',
# ]
# detect_folders = []
# detect_variables = [
#     'RUBY_VERSION',
#     'RBENV_VERSION',
# ]

[rust]
format = '[via](bold white) [$symbol($version )]($style)'
style = 'bold blue'
# version_format = 'v${raw}'
# symbol = '🦀 '
# disabled = false
# detect_extensions = ['rs']
# detect_files = ['Cargo.toml']
# detect_folders = []

[scala]
format = '[via](bold white) [$symbol($version )]($style)'
style = 'bold blue'
# version_format = 'v${raw}'
# disabled = false
# symbol = '🆂 '
# detect_extensions = [
#     'sbt',
#     'scala',
# ]
# detect_files = [
#     '.scalaenv',
#     '.sbtenv',
#     'build.sbt',
# ]
# detect_folders = ['.metals']

# [shell]
# format = '[$indicator]($style) '
# bash_indicator = 'bsh'
# fish_indicator = 'fsh'
# zsh_indicator = 'zsh'
# powershell_indicator = 'psh'
# ion_indicator = 'ion'
# elvish_indicator = 'esh'
# tcsh_indicator = 'tsh'
# nu_indicator = 'nu'
# xonsh_indicator = 'xsh'
# unknown_indicator = ''
# style = 'white bold'
# disabled = true

# [shlvl]
# threshold = 2
# format = '[$symbol$shlvl]($style) '
# symbol = '↕️  '
# repeat = false
# style = 'bold yellow'
# disabled = true

# [singularity]
# symbol = ''
# format = '[$symbol\[$env\]]($style) '
# style = 'blue bold dimmed'
# disabled = false

# [status]
# format = '[$symbol$status]($style) '
# symbol = '✖'
# success_symbol = '✔️'
# not_executable_symbol = '🚫'
# not_found_symbol = '🔍'
# sigint_symbol = '🧱'
# signal_symbol = '⚡'
# style = 'bold red'
# map_symbol = false
# recognize_signal_code = true
# pipestatus = false
# pipestatus_separator = '|'
# pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'
# disabled = true

# [sudo]
# format = '[as $symbol]($style)'
# symbol = '🧙 '
# style = 'bold blue'
# allow_windows = false
# disabled = true

[swift]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '🐦 '
# style = 'bold 202'
# disabled = false
# detect_extensions = ['swift']
# detect_files = ['Package.swift']
# detect_folders = []

[terraform]
format = '[via](bold white) [$symbol$workspace]($style) '
# version_format = 'v${raw}'
# symbol = '💠 '
# style = 'bold 105'
# disabled = false
# detect_extensions = [
#     'tf',
#     'tfplan',
#     'tfstate',
# ]
# detect_files = []
# detect_folders = ['.terraform']

[time]
format = '[at](bold white) [$time]($style) '
# style = 'bold yellow'
# use_12hr = false
# disabled = true
# utc_time_offset = 'local'
# time_range = '-'

[username]
format = '😈 [$user]($style) [in](bold white) '
# style_root = 'red bold'
# style_user = 'yellow bold'
# show_always = false
# disabled = false

[vagrant]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '⍱ '
# style = 'cyan bold'
# disabled = false
# detect_extensions = []
# detect_files = ['Vagrantfile']
# detect_folders = []

[vcsh]
format = '[vcsh](bold white) [$symbol$repo]($style) '
# symbol = ''
# style = 'bold yellow'
# disabled = false

[vlang]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = 'V '
# style = 'blue bold'
# disabled = false
# detect_extensions = ['v']
# detect_files = [
#     'v.mod',
#     'vpkg.json',
#     '.vpkg-lock.json',
# ]
# detect_folders = []

[zig]
format = '[via](bold white) [$symbol($version )]($style)'
# version_format = 'v${raw}'
# symbol = '↯ '
# style = 'bold yellow'
# disabled = false
# detect_extensions = ['zig']
# detect_files = []
# detect_folders = []

# [custom]

# EOF

